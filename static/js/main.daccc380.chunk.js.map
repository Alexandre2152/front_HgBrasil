{"version":3,"sources":["components/home.jsx","components/registerUser.jsx","components/finance.jsx","router/routers.jsx","App.js","index.js"],"names":["Home","props","state","id","nome","senha","clickNome","bind","clickSenha","handleSubmit","e","this","setState","target","value","keys","Object","localStorage","console","log","getItem","history","push","i","length","getObj","JSON","parse","nomeUser","senhaUser","preventDefault","className","onSubmit","htmlFor","type","onChange","placeholder","Component","RegisterUser","dados","apend","setItem","stringify","alert","to","Finance","useState","data","setData","loading","setLoading","error","setError","useEffect","myHeaders","Headers","append","fetch","method","headers","redirect","then","res","json","catch","err","finally","listar","values","Array","isArray","map","item","currencies","source","Accordion","defaultActiveKey","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","Table","striped","bordered","hover","responsive","ARS","name","buy","sell","variacao","variation","BTC","AUD","CAD","CNY","EUR","GBP","JPY","USD","stocks","CAC","location","points","IBOVESPA","NASDAQ","NIKKEI","bitcoin","bitstamp","format","last","blockchain_info","coinbase","foxbit","mercadobitcoin","size","block","Routes","basename","process","exact","path","component","Register","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daccc380.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            id: 0,\r\n            nome: '',\r\n            senha: ''\r\n        }\r\n\r\n        this.clickNome = this.clickNome.bind(this)\r\n        this.clickSenha = this.clickSenha.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    clickNome(e){\r\n        this.setState({ nome: e.target.value })\r\n    }\r\n\r\n    clickSenha(e){\r\n        this.setState({ senha: e.target.value })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        //Iniciando o localStorage\r\n        // const id = this.state.id\r\n\r\n        //Pegando todas as keys do localStorage\r\n        const keys = Object.keys(localStorage)\r\n        console.log(keys)\r\n\r\n        //Pegar um objeto do array\r\n        // const getObj = JSON.parse(localStorage.getItem(this.state.id))\r\nif(!localStorage.getItem(keys)){\r\n                this.props.history.push('/registro')\r\n            }\r\n        for( let i=0; i < localStorage.length; i++){\r\n            \r\n            //Pegar um objeto do array\r\n            const getObj = JSON.parse(localStorage.getItem(keys[i]))\r\n\r\n            //Peganso o nome e a senha digitados no input\r\n            const nomeUser = this.state.nome\r\n            const senhaUser = this.state.senha\r\n\r\n            \r\n\r\n            //Consição para verificar se o nome e a senha correponde ao usuário\r\n            if( (getObj.nome === nomeUser) && (getObj.senha === senhaUser)){\r\n                this.props.history.push('/finances')\r\n            }else{\r\n                this.props.history.push('/registro')\r\n            }\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n    <div>\r\n        <div className=\"container\">\r\n            <div className=\"pt-5\">\r\n                <form onSubmit={this.handleSubmit} className=\"border border-blue p-2\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"inputUser\" className=\"form-label\">Usuário</label>\r\n                        <input type=\"text\" value={this.state.nome} onChange={this.clickNome} className=\"form-control\" placeholder=\"Inserir Usuário\"></input>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"inputPassword\" className=\"form-label\">Senha</label>\r\n                        <input type=\"password\" value={this.state.senha} onChange={this.clickSenha} className=\"form-control\" placeholder=\"Inserir Senha\"></input>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">ENTRAR</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Home","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass RegisterUser extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            id: 0,\r\n            nome: '',\r\n            senha: ''\r\n        }\r\n\r\n        this.clickNome = this.clickNome.bind(this)\r\n        this.clickSenha = this.clickSenha.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    clickNome(e){\r\n        this.setState({ nome: e.target.value })\r\n    }\r\n\r\n    clickSenha(e){\r\n        this.setState({ senha: e.target.value })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        //pegando o id do state\r\n        const id = this.state.id\r\n\r\n        //Pegando todas as keys do localStorage\r\n        const keys = Object.keys(localStorage)\r\n        // console.log( 'Keys: '+keys)\r\n\r\n        //Gerar array com os dados nome e senha\r\n        const dados = {nome: this.state.nome, senha: this.state.senha}\r\n        \r\n        //Condição para verificar se o localStorage esta vazio e criar um novo usuário\r\n        if( !localStorage.getItem(id) ){\r\n            alert(`Dados gravos com sucesso!`)           \r\n            //Inserir no localStorage as informções digitadas no formulario.\r\n            localStorage.setItem(id, JSON.stringify(dados))\r\n            \r\n        }else{\r\n\r\n            for(var i=0; i < localStorage.length; i++){\r\n\r\n                //Pegar um objeto do array\r\n                const getObj = JSON.parse(localStorage.getItem(keys[i]))\r\n\r\n                //Peganso o nome digitado no input\r\n                const nomeUser = this.state.nome\r\n\r\n                if( (getObj.nome === nomeUser)){\r\n                    console.log('Existe')\r\n                }else{\r\n                    // this.props.history.push('/NaoRegistrado')\r\n                    console.log('Não Existe')\r\n                    getObj.apend(localStorage.setItem(keys.length+1, JSON.stringify(dados)))\r\n                }\r\n            }\r\n        }\r\n        e.preventDefault()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n    <div className=\"pt-5\">\r\n\r\n        <div className=\"container border border-aqua rounded shadow alert alert-primary\">\r\n            <p className=\"text-center\"><h1>Usuário não Registrado no sistema.</h1></p>\r\n        </div>\r\n\r\n        \r\n\r\n        <div className=\"container\">\r\n            <div className=\"pt-5\">\r\n\r\n            <div className=\"container border border-aqua rounded shadow alert alert-info\">\r\n                <p className=\"text-center\"><h6>Cadastrar novo Usuário e senha!</h6></p>\r\n            </div>\r\n\r\n                <form onSubmit={this.handleSubmit} className=\"border border-blue p-2\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"inputUser\" className=\"form-label\">Usuário</label>\r\n                        <input type=\"text\" value={this.state.nome} onChange={this.clickNome} className=\"form-control\" placeholder=\"Inserir Usuário\"></input>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"inputPassword\" className=\"form-label\">Senha</label>\r\n                        <input type=\"password\" value={this.state.senha} onChange={this.clickSenha} className=\"form-control\" placeholder=\"Inserir Senha\"></input>\r\n                    </div>\r\n                    <div className=\"text text-center\">\r\n                    <Link to=\"/\"> <button type=\"submit\" className=\"btn btn-primary\">Voltar</button> </Link>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Cadastrar</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default RegisterUser","import React, { useEffect, useState } from 'react'\r\nimport { Accordion, Button, Card, Table } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ToggleButton from 'react-bootstrap/ToggleButton'\r\n\r\nexport default function Finance (){\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const sell = null\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        \r\n        //Passando o headers com cookies de requisição\r\n        const myHeaders = new Headers()\r\n        myHeaders.append(\r\n            'Cookie', '__cfduid=d2b6dfdef5fde0ccaebe63f095281b5581619807805',\r\n            )\r\n        //Passando parametros do cabeçalho    \r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: myHeaders,\r\n            redirect: 'follow'\r\n        };\r\n        //Iniciando a chamada da url\r\n        fetch('https://api.hgbrasil.com/finance?format=json-cors&key=ac7f859a', requestOptions)\r\n        .then((res) => res.json())\r\n        .then((data) => { \r\n                setData(data)\r\n                // console.log(data)\r\n        })\r\n        .catch((err) => {\r\n                setError(err)\r\n            })\r\n        .finally(() => {\r\n            setLoading(false)\r\n        })\r\n    }, [])\r\n\r\n    //Condição para verificar se os dados estão sendo carregados\r\n    if(loading){\r\n        return <p>Carregando Dados...</p>\r\n    }\r\n\r\n    //Converter o valor recebiso em um array\r\n    const listar = Object.values(data)\r\n\r\n    //Verificar se o valor a ser cosumido não esta vazio.\r\n    if(error || !Array.isArray(listar)){\r\n        return <p>Ocorreu um erro ao carregar seus dados!</p>\r\n        \r\n    }\r\nconsole.log(listar)\r\n            //Copo com conteúdo a ser exibido.\r\n            return(\r\n                \r\n                <div className=\"container\">\r\n\r\n                {/* Lista todos os dados da api */}\r\n                   <div>\r\n                       <p className=\"text-uppercase alert alert-success \">\r\n                           <strong>moeda base de cotação: </strong>\r\n                            {listar.map( (item) => {\r\n                                // console.log(item.currencies)\r\n                                return JSON.stringify(item.currencies && item.currencies.source) \r\n                            })} \r\n                        </p>\r\n                   </div>\r\n\r\n                   {/* Acordeon para exibir os campos da api*/}\r\n                   <Accordion defaultActiveKey=\"0\">\r\n                        <Card>\r\n                            <Card.Header>\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            <strong className='text text-uppercase'>cotação das moedas</strong>\r\n                            </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                {/* CORPO DA REQUISIÇÃO DE COTAÇÃO DE MOEDAS */}\r\n                                <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th>MOEDA</th>\r\n                                        <th>COMPRA</th>\r\n                                        <th>VENDA</th>\r\n                                        <th>VARIAÇÃO</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        \r\n                                        {/* ITEM 01 */}\r\n                                        <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.ARS.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.ARS.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.ARS.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.ARS.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 02 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.BTC.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.BTC.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.BTC.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.BTC.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 03 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.AUD.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.AUD.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.AUD.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.AUD.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 04 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CAD.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CAD.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CAD.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.CAD.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 05 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CNY.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CNY.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.CNY.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.CNY.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 06 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.EUR.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.EUR.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.EUR.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.EUR.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 07 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.GBP.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.GBP.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.GBP.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.GBP.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 08 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.JPY.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.JPY.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.JPY.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.JPY.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 09 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.USD.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.USD.buy)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.currencies && item.currencies.USD.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.currencies && item.currencies.USD.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n                                     \r\n                                        \r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        <Card>\r\n                            <Card.Header>\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                            <strong className='text text-uppercase'>posições dos principais mercados</strong>\r\n                            </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"1\">\r\n                            <Card.Body>\r\n                            {/* CORPO DA REQUISIÇÃO DE COTAÇÃO DE MOEDAS */}\r\n                            <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th>NOME</th>\r\n                                        <th>LOCAL</th>\r\n                                        <th>PONTOS</th>\r\n                                        <th>VARIAÇÃO</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        \r\n                                        {/* ITEM 01 */}\r\n                                        <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.CAC.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.CAC.location)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.CAC.points) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.stocks && item.stocks.CAC.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 02 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.IBOVESPA.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.IBOVESPA.location)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.IBOVESPA.points) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.stocks && item.stocks.IBOVESPA.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 03 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NASDAQ.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NASDAQ.location)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NASDAQ.points) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.stocks && item.stocks.NASDAQ.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 04 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NIKKEI.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NIKKEI.location)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.stocks && item.stocks.NIKKEI.points) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.stocks && item.stocks.NIKKEI.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>                                   \r\n                                        \r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n\r\n                        <Card>\r\n                            <Card.Header>\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" className=\"text\">\r\n                            <strong className='text text-uppercase'>cotação nas principais corretoras</strong> \r\n                            </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"2\">\r\n                            <Card.Body>\r\n                            {/* CORPO DA REQUISIÇÃO DE COTAÇÃO DE MOEDAS */}\r\n                            <Table striped bordered hover responsive>\r\n                                    <thead>\r\n                                        <tr>\r\n                                        <th>NOME</th>\r\n                                        <th>MOEDA DE CABIO</th>\r\n                                        <th>ÚLTIMA POIÇÃO</th>\r\n                                        <th>COMPRA</th>\r\n                                        <th>VENDA</th>\r\n                                        <th>VARIAÇÃO</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        \r\n                                        {/* ITEM 01 */}\r\n                                        <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.format)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.buy) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.last) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.bitcoin && item.bitcoin.bitstamp.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 02 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.format)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.buy) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.last) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.bitcoin && item.bitcoin.blockchain_info.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    {/* ITEM 03 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.coinbase.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.coinbase.format)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.coinbase.buy) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.coinbase.last) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.coinbase.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.bitcoin && item.bitcoin.coinbase.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>\r\n\r\n                                    \r\n                                    {/* ITEM 04 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.foxbit.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.foxbit.format)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.foxbit.buy) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.foxbit.last) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.foxbit.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.bitcoin && item.bitcoin.foxbit.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>  \r\n\r\n                                    {/* ITEM 05 */}\r\n                                    <tr >\r\n                                            <>\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.name)\r\n                                                )} \r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.format)\r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.buy) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.last) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => \r\n                                                    JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.sell) \r\n                                                )}\r\n                                            </td>\r\n\r\n                                            <td >\r\n                                                {listar.map( (item) => {\r\n                                                    const variacao = JSON.stringify(item.bitcoin && item.bitcoin.mercadobitcoin.variation)\r\n                                                    if(variacao < 0){\r\n                                                        return(\r\n                                                            <strong className=\"text text-danger\">{variacao}</strong>\r\n                                                            )\r\n                                                    }else{\r\n                                                        return(\r\n                                                            <strong className=\"text text-primary\">{variacao}</strong>\r\n                                                            )\r\n                                                    }\r\n                                                    })}\r\n                                            </td>\r\n                                            </>\r\n                                    </tr>                                   \r\n                                        \r\n                                    </tbody>\r\n                                </Table>\r\n\r\n                            </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n\r\n                    <div className=\"pt-3\">\r\n                    <Link to=\"/\"> <Button type=\"submit\" variant=\"primary\" size=\"lg\" block>Voltar</Button> </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            )    \r\n}\r\n","import React from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Home from '../components/home'\r\nimport Register from '../components/registerUser'\r\nimport Finance from '../components/finance'\r\n\r\nimport HOC from '../components/autoLogout'\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ Home } />\r\n            <Route exact path=\"/registro\" component={ Register } />\r\n            <Route exact path=\"/finances\" component={ Finance } />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\n\r\nexport default Routes","import React from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Routes from './router/routers';\n\nconst App = () => <Routes></Routes>\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}